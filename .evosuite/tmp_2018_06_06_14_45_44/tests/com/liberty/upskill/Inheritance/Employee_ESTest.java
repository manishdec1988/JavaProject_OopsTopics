/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 06 18:55:23 GMT 2018
 */

package com.liberty.upskill.Inheritance;

import org.junit.Test;
import static org.junit.Assert.*;
import com.liberty.upskill.Inheritance.Employee;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Employee_ESTest extends Employee_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Employee employee0 = new Employee();
      employee0.setEmpPhone("");
      String string0 = employee0.getEmpPhone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Employee employee0 = new Employee();
      employee0.setEmpNo(216);
      int int0 = employee0.getEmpNo();
      assertEquals(216, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Employee employee0 = new Employee();
      employee0.setEmpName("");
      String string0 = employee0.getEmpName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Employee employee0 = new Employee();
      employee0.setEmpAddress("1>DRQIa");
      String string0 = employee0.getEmpAddress();
      assertEquals("1>DRQIa", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Employee employee0 = new Employee();
      int int0 = employee0.getEmpNo();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Employee employee0 = new Employee();
      employee0.setEmpName("R\"DibAFk~");
      String string0 = employee0.getEmpName();
      assertEquals("R\"DibAFk~", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Employee employee0 = new Employee();
      employee0.setEmpAddress("");
      String string0 = employee0.getEmpAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Employee employee0 = new Employee();
      employee0.setEmpPhone("1>DRQIa");
      String string0 = employee0.getEmpPhone();
      assertEquals("1>DRQIa", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Employee employee0 = new Employee();
      String string0 = employee0.getEmpPhone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Employee employee0 = new Employee();
      String string0 = employee0.getEmpName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Employee employee0 = new Employee();
      String string0 = employee0.getEmpAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Employee employee0 = new Employee();
      employee0.setEmpNo((-1362));
      int int0 = employee0.getEmpNo();
      assertEquals((-1362), int0);
  }
}
